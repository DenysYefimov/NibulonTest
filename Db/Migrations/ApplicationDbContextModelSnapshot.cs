// <auto-generated />
using Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Db.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Db.Models.Aup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CITY");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NCITY");

                    b.Property<int?>("DistrictCode")
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasColumnName("RAJ");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NRAJ");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("INDEX_A");

                    b.Property<short?>("RegionCode")
                        .HasMaxLength(4)
                        .HasColumnType("smallint")
                        .HasColumnName("OBL");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOBL");

                    b.HasKey("Id");

                    b.HasIndex("CityCode");

                    b.HasIndex("DistrictCode");

                    b.HasIndex("RegionCode");

                    b.ToTable("AUP", (string)null);
                });

            modelBuilder.Entity("Db.Models.City", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CITY_KOD");

                    b.Property<int?>("DistrictCode")
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasColumnName("KRAJ");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CITY");

                    b.Property<short?>("RegionCode")
                        .HasMaxLength(4)
                        .HasColumnType("smallint")
                        .HasColumnName("OBL");

                    b.HasKey("Code");

                    b.HasIndex("DistrictCode");

                    b.HasIndex("RegionCode");

                    b.ToTable("CITY", (string)null);
                });

            modelBuilder.Entity("Db.Models.District", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasColumnName("KRAJ");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NRAJ");

                    b.HasKey("Code");

                    b.ToTable("KRAJ", (string)null);
                });

            modelBuilder.Entity("Db.Models.Region", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .HasColumnType("smallint")
                        .HasColumnName("OBL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Code"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOBL");

                    b.HasKey("Code");

                    b.ToTable("OBL", (string)null);
                });

            modelBuilder.Entity("Db.Models.Aup", b =>
                {
                    b.HasOne("Db.Models.City", "City")
                        .WithMany("Aups")
                        .HasForeignKey("CityCode");

                    b.HasOne("Db.Models.District", "District")
                        .WithMany("Aups")
                        .HasForeignKey("DistrictCode");

                    b.HasOne("Db.Models.Region", "Region")
                        .WithMany("Aups")
                        .HasForeignKey("RegionCode");

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Db.Models.City", b =>
                {
                    b.HasOne("Db.Models.District", "District")
                        .WithMany("Cities")
                        .HasForeignKey("DistrictCode");

                    b.HasOne("Db.Models.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("RegionCode");

                    b.Navigation("District");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Db.Models.City", b =>
                {
                    b.Navigation("Aups");
                });

            modelBuilder.Entity("Db.Models.District", b =>
                {
                    b.Navigation("Aups");

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Db.Models.Region", b =>
                {
                    b.Navigation("Aups");

                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
